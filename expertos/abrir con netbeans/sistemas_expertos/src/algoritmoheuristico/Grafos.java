
package algoritmoheuristico;

public class Grafos {
    int[][] matriz1 = {{0,28,60,55,12,81,94,39,11,70},
                       {0, 0,68,93,90,68,24,45,34,71},
                       {0, 0, 0,88,33,79,30,44,28,86},
                       {0, 0, 0, 0,10,22,53,25,72,78},
                       {0, 0, 0, 0, 0,68,10,24,58,84},
                       {0, 0, 0, 0, 0, 0,72,56,32,72},
                       {0, 0, 0, 0, 0, 0, 0,8 ,85,93},
                       {0, 0, 0, 0, 0, 0, 0, 0,67,60},
                       {0, 0, 0, 0, 0, 0, 0, 0, 0,93},
                       {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
    int[] conexion1={6,8,7,44,2,28,8,11,0,28,1,71,9,72,5,22,3,10,4,10};
    int[] conexion11={0,94,6,93,9,93,8,67,7,24,4,90,1,93,3,88,2,79,5,81};
    
    int[][] matriz2 = {{0,82,40,13,63,86, 3, 4,18,22},
                       {0, 0,68,77,43, 9, 3,61, 2,40},
                       {0, 0, 0,24,96,80,45,55,77,72},
                       {0, 0, 0, 0, 7,57,61,35,48,98},
                       {0, 0, 0, 0, 0,36,10, 1,51,89},
                       {0, 0, 0, 0, 0, 0,42,33,68,11},
                       {0, 0, 0, 0, 0, 0, 0,48,59,55},
                       {0, 0, 0, 0, 0, 0, 0, 0,52,47},
                       {0, 0, 0, 0, 0, 0, 0, 0, 0,24},
                       {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
    int[] conexion2={4,1,7,4,0,3,6,3,1,2,8,24,9,11,5,80,2,24,3,7};
    int[] conexion22={3,98,9,89,4,96,2,80,5,86,0,82,1,61,7,52,8,59,6,61};
    
    int[][] matriz3 = {{0,94,18,22, 7,84,70,88,88,17},
                       {0, 0,28,22,50,58,78, 2,49,76},
                       {0, 0, 0,18,98,96,56,51,40,86},
                       {0, 0, 0, 0,96,68,63,51,28,89},
                       {0, 0, 0, 0, 0,57,49,23,55, 1},
                       {0, 0, 0, 0, 0, 0,93,76,76,86},
                       {0, 0, 0, 0, 0, 0, 0,45,69,10},
                       {0, 0, 0, 0, 0, 0, 0, 0,35,71},
                       {0, 0, 0, 0, 0, 0, 0, 0, 0,96},
                       {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
    int[] conexion3={4,1,9,10,6,93,5,76,8,35,7,2,1,22,3,18,2,18,0,7};
    int[] conexion33={2,98,4,96,3,89,9,96,8,35,7,88,0,94,1,78,6,93,5,96};
    
    public int[][] getMatriz(int n){
        switch(n){
            case 1:
                return this.matriz1;
            case 2:
                return this.matriz2;
            default:
                return this.matriz3;
        }
    }
    public int[] getConexion(int n, int opc){
        if(opc==1){ // MAXIMIZAR
            switch(n){
            case 1:
                return this.conexion11;
            case 2:
                return this.conexion22;
            default:
                return this.conexion33;
        }
        }else{      // MINIMIZAR
            switch(n){
            case 1:
                return this.conexion1;
            case 2:
                return this.conexion2;
            default:
                return this.conexion3;
        }
        }
        
    }
}
