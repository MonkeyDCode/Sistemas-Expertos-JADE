/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package AgenteGerente;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author Samuel
 */
public class VentanaGerente extends javax.swing.JFrame {

    public static VentanaGerente vnt = new VentanaGerente();
    
    private static ServerSocket servidor; //
    private static Socket conexion; //Socket para conectarse con el cliente
    
    public static VentanaGerente main = vnt;
    
    
   
    public VentanaGerente() {
        initComponents();
        this.setLocationRelativeTo(null);
        jTextArea1.setEditable(false);
        File archivo3 = new File ("gerente.jpg");
        BufferedImage imgsel2;
        Image img;
        try {
            //Imagen para GERENTE
            img = ImageIO.read(archivo3);
            imgsel2 = ImageIO.read(archivo3);
            ImageIcon icon = new ImageIcon(img);
            Image imgEscalada = icon.getImage().getScaledInstance(jLabel2.getWidth(),
            jLabel2.getHeight(), Image.SCALE_SMOOTH);
            Icon iconoEscalado = new ImageIcon(imgEscalada);
            jLabel2.setIcon(iconoEscalado);   
        } catch (IOException ex) {
            Logger.getLogger(VentanaGerente.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }

    public void setJTextArea1(String src){
        jTextArea1.setText(src);
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Gerente");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
   
        
       /* java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {*/
               // new VentanaGerente().setVisible(true);
                vnt.setVisible(true);
        /*    }
        });
        */
                ExecutorService executor = Executors.newCachedThreadPool(); //Para correr los threads
        
        try {
            //main.mostrarMensaje("No se encuentra Servidor");
            servidor = new ServerSocket(11111, 100);
            //main.mostrarMensaje("Esperando Cliente ...");
        
            //Bucle infinito para esperar conexiones de los clientes
           /* principl nuevo = new principl();
            nuevo.metodito();*/
            while (true){
                try {
                    conexion = servidor.accept(); //Permite al servidor aceptar conexiones        
        
                    //main.mostrarMensaje("Conexion Establecida");
                  //  main.mostrarMensaje("Conectado a : " + conexion.getInetAddress().getHostName());
                    System.out.println("Conectado a : " + conexion.getInetAddress().getHostName());
                //    main.habilitarTexto(true); //permite escribir texto para enviar
        
                    //Ejecucion de los threads
                    executor.execute(new ThreadRecibe(conexion, main)); //client
                    executor.execute(new ThreadEnvia(conexion, main));
                } catch (IOException ex) {
                    Logger.getLogger(VentanaGerente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(VentanaGerente.class.getName()).log(Level.SEVERE, null, ex);
        } //Fin del catch
        finally {
        }
        executor.shutdown();
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
