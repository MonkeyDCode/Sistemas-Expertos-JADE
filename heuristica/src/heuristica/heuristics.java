/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package heuristica;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marco
 */
public class heuristics extends javax.swing.JFrame {

    /**
     * Creates new form heuristics
     */
    Matriz matriz;

    public heuristics() throws IOException {
        PrintWriter writer = null;
        try {
            initComponents();
            matriz = new Matriz();
            matriz.mostrarMatriz();
            //matriz.matriz;
            llenarTabla(matriz.matriz);
            writer = new PrintWriter("martiz.dot", "UTF-8");
            writer.println("graph arbol { \n size=\"10\";");
            for(int h=0;h<10;h++){
                for(int g=h;g<10;g++){
                    if(g!=h){
                        writer.println(h+"--"+g+"[label="+matriz.matriz[h][g]+"]");
                    }
                }
            }
            writer.println("}");
            writer.close();
            Process res = Runtime.getRuntime().exec("dot -Tjpg matriz.dot -o matriz.jpg");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            writer.close();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nodoinicial = new javax.swing.JComboBox();
        calcular1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        calcular2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        cnodo4 = new javax.swing.JComboBox();
        cnodo5 = new javax.swing.JComboBox();
        cnodo6 = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        cnodo7 = new javax.swing.JComboBox();
        cnodo8 = new javax.swing.JComboBox();
        cnodo9 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cnodo1 = new javax.swing.JComboBox();
        cnodo2 = new javax.swing.JComboBox();
        cnodo3 = new javax.swing.JComboBox();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nodo inicial");

        nodoinicial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        calcular1.setText("calcular camino");
        calcular1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcular1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nodoinicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(82, 82, 82)
                .addComponent(calcular1)
                .addContainerGap(351, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nodoinicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calcular1))
                .addContainerGap(391, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("voraz 1", jPanel1);

        calcular2.setText("calcular camino");
        calcular2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcular2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(calcular2)
                .addContainerGap(380, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(calcular2)
                .addContainerGap(387, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("voraz 2", jPanel2);

        jLabel6.setText("Nodo1");

        jLabel7.setText("Nodo2");

        jLabel8.setText("Nodo3");

        jButton2.setText("calcular");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cnodo4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        cnodo5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        cnodo6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cnodo6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cnodo5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(49, 49, 49))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(cnodo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cnodo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButton2)
                    .addComponent(cnodo5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cnodo6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 632, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 136, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 137, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 468, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 101, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 101, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("insercion mas lejana", jPanel5);

        jLabel9.setText("Nodo1");

        jLabel10.setText("Nodo2");

        jLabel11.setText("Nodo3");

        jButton3.setText("calcular");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cnodo7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        cnodo8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        cnodo9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cnodo9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cnodo8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(49, 49, 49))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(cnodo7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cnodo7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButton3)
                    .addComponent(cnodo8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cnodo9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 632, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 136, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 137, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 468, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 101, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 101, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("insercion al azar", jPanel6);

        jLabel2.setText("Nodo1");

        jLabel3.setText("Nodo2");

        jLabel4.setText("Nodo3");

        jButton1.setText("calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cnodo1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        cnodo2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        cnodo3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cnodo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cnodo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(49, 49, 49))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cnodo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cnodo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton1)
                    .addComponent(cnodo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cnodo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(312, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("insercion mas cercana", jPanel4);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jTabbedPane2.addTab("", jScrollPane1);

        jTabbedPane1.addTab("Tabla", jTabbedPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void llenarTabla(int[][] matriz)
    {
        String titulo[] ={"/","1","2","3","4","5","6","7","8","9","10"};
        String vector[]=new String[11];
        DefaultTableModel modelo= new DefaultTableModel(null,titulo);
        for(int j =1;j<11;j++)
        {
            vector[0]=Integer.toString(j);
            for(int i =1;i<11;i++)
            {
                vector[i]=Integer.toString(matriz[j-1][i-1]);
            }  
            modelo.addRow(vector);
        }
        tabla.setModel(modelo);
        
        
    }
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int n1, n2, n3;
        System.out.println("bjhfsfjds");
        n1 = Integer.parseInt((String) (cnodo1.getSelectedItem()));
        n2 = Integer.parseInt((String) (cnodo2.getSelectedItem()));
        n3 = Integer.parseInt((String) (cnodo3.getSelectedItem()));
        if (n1 != n2 && n1 != n3 && n2 != n3) {
            PrintWriter writer = null;
            try {
                ArrayList nodosorigen = new ArrayList();
                ArrayList nodosdestino = new ArrayList();
                nodosorigen.add(n1);
                nodosdestino.add(n2);
                nodosorigen.add(n2);
                nodosdestino.add(n3);
                nodosorigen.add(n3);
                nodosdestino.add(n1);
                int matriz1[][] = new int[10][10];
                matriz1[n1][n2] = matriz.matriz[n1][n2];
                //matriz1[n2][n1] = matriz.matriz[n2][n1];
                matriz1[n1][n3] = matriz.matriz[n1][n3];
                //matriz1[n3][n1] = matriz.matriz[n3][n1];
                //matriz1[n2][n3] = matriz.matriz[n2][n3];
                //matriz1[n3][n2] = matriz.matriz[n3][n2];
                while (nodosorigen.size() < 10 && nodosdestino.size() < 10) {
                    int nuevo = 0;
                    int d = 1000;
                    for (int i = 0; i < 10; i++) {
                        if (!nodosorigen.contains(i)) {
                            if (distancia(i, nodosorigen) < d) {
                                d = distancia(i, nodosorigen);
                                nuevo = i;
                            }
                        }
                    }
                    int des = ((Integer) nodosorigen.get(nodosorigen.size() - 1));
                    if (!nodosorigen.contains(nuevo) && !nodosdestino.contains(nuevo)) {
                        //matriz1[nuevo][des] = matriz.matriz[nuevo][des];
                        matriz1[des][nuevo] = matriz.matriz[des][nuevo];
                    }
                    nodosorigen.add(nuevo);

                }
                matriz1[(Integer) nodosorigen.get(1)][(Integer) nodosorigen.get(9)] = matriz.matriz[(Integer) nodosorigen.get(1)][(Integer) nodosorigen.get(9)];
                //matriz1[(Integer)nodosorigen.get(9)][(Integer)nodosorigen.get(1)]=matriz.matriz[(Integer)nodosorigen.get(9)][(Integer)nodosorigen.get(1)];

                writer = new PrintWriter("grafo.dot", "UTF-8");
                writer.println("graph arbol { \n size=\"10\";");
                //writer.println("The second line");
                for (int i1 = 0; i1 < 10; i1++) {
                    for (int j1 = 0; j1 < 10; j1++) {
                        if (matriz1[i1][j1] != 0) {
                            System.out.println(matriz1[i1][j1] + "R " + i1 + "L " + j1);
                            writer.println(i1 + "--" + j1+"[label="+matriz1[i1][j1]+"];");
                        }
                    }
                }
                writer.println("}");
                writer.close();
                Process p = Runtime.getRuntime().exec("dot -Tjpg grafo.dot -o grafo.jpg");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                
            }
            try {
                //panelresultados
                Process p = Runtime.getRuntime().exec("pwd");
            } catch (IOException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int n1, n2, n3;
        System.out.println("bjhfsfjds");
        n1 = Integer.parseInt((String) (cnodo7.getSelectedItem()));
        n2 = Integer.parseInt((String) (cnodo8.getSelectedItem()));
        n3 = Integer.parseInt((String) (cnodo9.getSelectedItem()));
        if (n1 != n2 && n1 != n3 && n2 != n3) {
            PrintWriter writer = null;
            try {
                ArrayList nodosorigen = new ArrayList();
                ArrayList nodosdestino = new ArrayList();
                nodosorigen.add(n1);
                nodosdestino.add(n2);
                nodosorigen.add(n2);
                nodosdestino.add(n3);
                nodosorigen.add(n3);
                nodosdestino.add(n1);
                int matriz1[][] = new int[10][10];
                matriz1[n1][n2] = matriz.matriz[n1][n2];
                //matriz1[n2][n1] = matriz.matriz[n2][n1];
                matriz1[n1][n3] = matriz.matriz[n1][n3];
                //matriz1[n3][n1] = matriz.matriz[n3][n1];
                //matriz1[n2][n3] = matriz.matriz[n2][n3];
                //matriz1[n3][n2] = matriz.matriz[n3][n2];
                while (nodosorigen.size() < 10) {
                    int nuevo = 0;
                    Random r;
                    r= new Random();
                    nuevo = r.nextInt(9);
                    int des = ((Integer) nodosorigen.get(nodosorigen.size() - 1));
                    if (!nodosorigen.contains(nuevo) && !nodosdestino.contains(nuevo)) {
                        //matriz1[nuevo][des] = matriz.matriz[nuevo][des];
                        matriz1[des][nuevo] = matriz.matriz[des][nuevo];
                    }
                    nodosorigen.add(nuevo);

                }
                matriz1[(Integer) nodosorigen.get(1)][(Integer) nodosorigen.get(9)] = matriz.matriz[(Integer) nodosorigen.get(1)][(Integer) nodosorigen.get(9)];
                //matriz1[(Integer)nodosorigen.get(9)][(Integer)nodosorigen.get(1)]=matriz.matriz[(Integer)nodosorigen.get(9)][(Integer)nodosorigen.get(1)];

                writer = new PrintWriter("grafo.dot", "UTF-8");
                writer.println("graph arbol { \n size=\"10\";");
                //writer.println("The second line");
                for (int i1 = 0; i1 < 10; i1++) {
                    for (int j1 = 0; j1 < 10; j1++) {
                        if (matriz1[i1][j1] != 0) {
                            System.out.println(matriz1[i1][j1] + "R " + i1 + "L " + j1);
                            writer.println(i1 + "--" + j1+"[label="+matriz1[i1][j1]+"];");
                        }
                    }
                }
                writer.println("}");
                writer.close();
                Process p = Runtime.getRuntime().exec("dot -Tjpg grafo.dot -o grafo.jpg");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
               
            }
            try {
                //panelresultados
                Process p = Runtime.getRuntime().exec("pwd");
            } catch (IOException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int n1, n2, n3;
        System.out.println("bjhfsfjds");
        n1 = Integer.parseInt((String) (cnodo4.getSelectedItem()));
        n2 = Integer.parseInt((String) (cnodo5.getSelectedItem()));
        n3 = Integer.parseInt((String) (cnodo6.getSelectedItem()));
        if (n1 != n2 && n1 != n3 && n2 != n3) {
            PrintWriter writer = null;
            try {
                ArrayList nodosorigen = new ArrayList();
                ArrayList nodosdestino = new ArrayList();
                nodosorigen.add(n1);
                nodosdestino.add(n2);
                nodosorigen.add(n2);
                nodosdestino.add(n3);
                nodosorigen.add(n3);
                nodosdestino.add(n1);
                int matriz1[][] = new int[10][10];
                matriz1[n1][n2] = matriz.matriz[n1][n2];
                //matriz1[n2][n1] = matriz.matriz[n2][n1];
                matriz1[n1][n3] = matriz.matriz[n1][n3];
                //matriz1[n3][n1] = matriz.matriz[n3][n1];
                //matriz1[n2][n3] = matriz.matriz[n2][n3];
                //matriz1[n3][n2] = matriz.matriz[n3][n2];
                while (nodosorigen.size() < 10 && nodosdestino.size() < 10) {
                    int nuevo = 0;
                    int d = 0;
                    for (int i = 0; i < 10; i++) {
                        if (!nodosorigen.contains(i)) {
                            if (distancia(i, nodosorigen) > d) {
                                d = distancia(i, nodosorigen);
                                nuevo = i;
                            }
                        }
                    }
                    int des = ((Integer) nodosorigen.get(nodosorigen.size() - 1));
                    if (!nodosorigen.contains(nuevo) && !nodosdestino.contains(nuevo)) {
                        //matriz1[nuevo][des] = matriz.matriz[nuevo][des];
                        matriz1[des][nuevo] = matriz.matriz[des][nuevo];
                    }
                    nodosorigen.add(nuevo);

                }
                matriz1[(Integer) nodosorigen.get(1)][(Integer) nodosorigen.get(9)] = matriz.matriz[(Integer) nodosorigen.get(1)][(Integer) nodosorigen.get(9)];
                //matriz1[(Integer)nodosorigen.get(9)][(Integer)nodosorigen.get(1)]=matriz.matriz[(Integer)nodosorigen.get(9)][(Integer)nodosorigen.get(1)];

                writer = new PrintWriter("grafo.dot", "UTF-8");
                writer.println("graph arbol { \n size=\"10\";");
                //writer.println("The second line");
                for (int i1 = 0; i1 < 10; i1++) {
                    for (int j1 = 0; j1 < 10; j1++) {
                        if (matriz1[i1][j1] != 0) {
                            System.out.println(matriz1[i1][j1] + "R " + i1 + "L " + j1);
                            writer.println(i1 + "--" + j1+"[label="+matriz1[i1][j1]+"];");
                        }
                    }
                }
                writer.println("}");
                writer.close();
                Process p = Runtime.getRuntime().exec("dot -Tjpg grafo.dot -o grafo.jpg");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                
            }
            try {
                //panelresultados
                Process p = Runtime.getRuntime().exec("pwd");
            } catch (IOException ex) {
                Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void calcular2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcular2ActionPerformed
        // TODO add your handling code here:
        //int origen=Integer.parseInt((String)nodoinicial.getSelectedItem());
        int [] y = Logic.caminoRandom(matriz.matriz);
        PrintWriter writer;
        try {
            writer = new PrintWriter("grafo.dot", "UTF-8");
            writer.println("graph arbol { \n size=\"10\";");
            for(int i=0;i<9;i++){
                writer.println(y[i] + "--" + y[i+1]+"[label="+matriz.matriz[y[i]][y[i+1]]+"];");
            }
            writer.println(y[9] + "--" + y[0]+"[label="+matriz.matriz[y[9]][y[0]]+"];");
            writer.println("}");
            writer.close();
            Process p = Runtime.getRuntime().exec("dot -Tjpg grafo.dot -o grafo.jpg");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
        } finally{

        }
    }//GEN-LAST:event_calcular2ActionPerformed

    private void calcular1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcular1ActionPerformed
        // TODO add your handling code here:
        int origen=Integer.parseInt((String)nodoinicial.getSelectedItem());
        int [] y = Logic.caminoCorto(matriz.matriz, origen);
        PrintWriter writer;
        try {
            writer = new PrintWriter("grafo.dot", "UTF-8");
            writer.println("graph arbol { \n size=\"10\";");
            for(int i=0;i<9;i++){
                writer.println(y[i] + "--" + y[i+1]+"[label="+matriz.matriz[y[i]][y[i+1]]+"];");
            }
            writer.println(y[9] + "--" + y[0]+"[label="+matriz.matriz[y[9]][y[0]]+"];");
            writer.println("}");
            writer.close();
            Process p = Runtime.getRuntime().exec("dot -Tjpg grafo.dot -o grafo.jpg");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
        } finally{

        }

    }//GEN-LAST:event_calcular1ActionPerformed

    private int distancia(int n, ArrayList a) {
        int dist, nt = 0;
        for (int j = 0; j < a.size(); j++) {
            nt = nt + (Integer) a.get(j);
        }
        dist = (int) Math.sqrt(Double.parseDouble(Integer.toString(nt)));
        dist = n - dist;
        dist=dist*Integer.signum(dist);
        return dist;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(heuristics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(heuristics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(heuristics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(heuristics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new heuristics().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(heuristics.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calcular1;
    private javax.swing.JButton calcular2;
    private javax.swing.JComboBox cnodo1;
    private javax.swing.JComboBox cnodo2;
    private javax.swing.JComboBox cnodo3;
    private javax.swing.JComboBox cnodo4;
    private javax.swing.JComboBox cnodo5;
    private javax.swing.JComboBox cnodo6;
    private javax.swing.JComboBox cnodo7;
    private javax.swing.JComboBox cnodo8;
    private javax.swing.JComboBox cnodo9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JComboBox nodoinicial;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
